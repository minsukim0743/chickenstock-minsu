<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chicken.project.member.model.dao.EmployeeMapper">
    <resultMap id="employeeResultMap" type="EmployeeDTO">
        <id property="empId" column="EMP_ID"/>
        <result property="empPwd" column="EMP_PWD"/>
        <result property="empName" column="EMP_NAME"/>
        <result property="empPhone" column="EMP_PHONE"/>
        <result property="empEmail" column="EMP_EMAIL"/>
        <result property="birth" column="EMP_BIRTH"/>
        <result property="empRole" column="EMP_ROLE"/>
        <result property="rnum" column="RNUM"/>
        <result property="emailCode" column="EMAIL_CODE"/>

        <association property="empRoleList" resultMap="empRoleResultMap"/>
        <association property="calendar" resultMap="calendarResultMap"/>
    </resultMap>

    <resultMap id="calendarResultMap" type="CalendarDTO">
        <id property="calNo" column="CAL_NO"/>
        <result property="calName" column="CAL_NAME"/>
        <result property="startDay" column="CAL_START"/>
        <result property="endDay" column="CAL_END"/>
        <result property="content" column="CAL_CONTENT"/>
        <result property="edit" column="CAL_EDIT"/>
    </resultMap>

    <resultMap id="authResultMap" type="AuthDTO">
        <id property="authCode" column="AUTH_CODE"/>
        <result property="authName" column="AUTH_NAME"/>
    </resultMap>

    <resultMap id="empRoleResultMap" type="EmpRoleDTO">
        <result property="authCode" column="AUTH_CODE"/>
        <result property="empId" column="EMP_ID"/>

        <association property="authority" resultMap="authResultMap"/>
    </resultMap>

    <select id="selectAllEmployee" resultMap="employeeResultMap">
        SELECT
            DISTINCT
            A.RNUM
                   , A.EMP_ID
                   , A.EMP_NAME
                   , A.EMP_PHONE
                   , A.EMP_EMAIL
                   , A.EMP_BIRTH
                   , DECODE((SELECT COUNT(A1.EMP_ID)
                             FROM EMPLOYEE A1
                                      JOIN EMP_ROLE B1 ON(A1.EMP_ID = B1.EMP_ID)
                             WHERE A1.EMP_ID = A.EMP_ID), 1, 'N', 2,'Y') AS EMP_ROLE
        FROM ( SELECT
                   ROWNUM RNUM
                    , C.EMP_ID
                    , C.EMP_NAME
                    , C.EMP_PHONE
                    , C.EMP_EMAIL
                    , C.EMP_BIRTH
                    , DECODE((SELECT COUNT(C1.EMP_ID)
                              FROM EMPLOYEE C1
                                       JOIN EMP_ROLE D1 ON(C1.EMP_ID = D1.EMP_ID)
                              WHERE C1.EMP_ID = C.EMP_ID), 1, 'N', 2,'Y') AS EMP_ROLE
               FROM ( SELECT DISTINCT
                          E.EMP_ID
                        , E.EMP_NAME
                        , E.EMP_PHONE
                        , E.EMP_EMAIL
                        , E.EMP_BIRTH
                        , DECODE((SELECT COUNT(E1.EMP_ID)
                                  FROM EMPLOYEE E1
                                           JOIN EMP_ROLE F1 ON(E1.EMP_ID = F1.EMP_ID)
                                  WHERE E1.EMP_ID = E.EMP_ID), 1, 'N', 2,'Y') AS EMP_ROLE
                      FROM EMPLOYEE E
                    ) C
            <![CDATA[
               WHERE ROWNUM <= #{ endRow }
                ]]>
          ) A
                 JOIN EMP_ROLE B ON(A.EMP_ID = B.EMP_ID)
        WHERE A.RNUM >= #{ startRow }
        ORDER BY 1 ASC
    </select>

    <insert id="insertEmployee" parameterType="EmployeeDTO">
        INSERT
        INTO EMPLOYEE
        (
            EMP_ID
        , EMP_NAME
        , EMP_PHONE
        , EMP_EMAIL
        , EMP_PWD
        , EMP_BIRTH
        )
        VALUES
            (
                #{ empId }
            , #{ empName }
            , #{ empPhone }
            , #{ empEmail }
            , #{ empPwd }
            , #{ birth }
            )
    </insert>
    <insert id="insertEmpRole" parameterType="EmpRoleDTO">
        INSERT
        INTO EMP_ROLE
        (
            AUTH_CODE
        , EMP_ID
        )
        VALUES
            (
                '2'
            , #{ empId }
            )
    </insert>

    <select id="selectEmpInfo" resultMap="employeeResultMap">
        SELECT
            A.EMP_ID
             , A.EMP_NAME
             , A.EMP_PHONE
             , A.EMP_EMAIL
             , A.EMP_PWD
             , A.EMP_BIRTH
             , B.AUTH_CODE
             , C.AUTH_NAME
        FROM EMPLOYEE A
                 LEFT JOIN EMP_ROLE B ON (A.EMP_ID = B.EMP_ID)
                 LEFT JOIN AUTH_CODE C ON (B.AUTH_CODE = C.AUTH_CODE)
        WHERE A.EMP_ID = #{ empId }
    </select>

    <select id="selectEmpId" resultMap="employeeResultMap">
        SELECT
            EMP_ID
        FROM EMPLOYEE
        WHERE EMP_ID = #{ empId }
    </select>

    <insert id="insertAuth" parameterType="EmpRoleDTO">
        INSERT
        INTO EMP_ROLE A
            (
          A.AUTH_CODE
        , A.EMP_ID
        )
        VALUES
            (
            '1'
                , #{ empId }
            )
    </insert>

    <select id="selectCkAdminAuth" resultType="_int">
        SELECT
            COUNT(*)
        FROM EMP_ROLE A
        WHERE A.EMP_ID = #{ empId }
    </select>

    <select id="selectCalendar" resultMap="calendarResultMap">
        SELECT
            CAL_NAME
             , CAL_START
             , (CAL_END+1) CAL_END
             , CAL_CONTENT
        FROM CALENDAR
    </select>

    <insert id="insertCalendar" parameterType="CalendarDTO">
        INSERT
        INTO CALENDAR
        (
            CAL_NO
        , CAL_NAME
        , CAL_START
        , CAL_END
        , CAL_CONTENT
        , EMP_ID
        )
        VALUES
            (
                SEQ_CALNO.NEXTVAL
            , #{ calName }
            , #{ startDay }
            , #{ endDay }
            , #{ content }
            , #{ empId }
            )
    </insert>

    <delete id="deleteCal" parameterType="CalendarDTO">
        DELETE
        FROM CALENDAR
        WHERE CAL_NAME = #{ calName }
          AND CAL_CONTENT = #{ content }
    </delete>

    <select id="selectCalNo" resultMap="calendarResultMap">
        SELECT
            CAL_NO
        FROM CALENDAR
        WHERE CAL_NAME = #{ calName }
          AND CAL_CONTENT = #{ content }
    </select>

    <update id="updateCal" parameterType="CalendarDTO">
        UPDATE
            CALENDAR
        SET
            CAL_NAME = NVL(#{ calName }, CAL_NAME)
          , CAL_CONTENT = NVL(#{ content }, CAL_CONTENT)
          , CAL_START = NVL(#{ startDay}, CAL_START)
          , CAL_END = NVL(#{ endDay }, CAL_END)
          , CAL_EDIT = #{ empId }
        WHERE CAL_NO = #{ calNo }
    </update>

    <update id="updateEmpPwd" parameterType="EmployeeDTO">
        UPDATE
            EMPLOYEE
        SET
            EMP_PWD = #{ empPwd }
        WHERE EMP_ID = #{ empId }
    </update>

    <update id="updateEmailCode" parameterType="EmployeeDTO">
        UPDATE
            EMPLOYEE
        SET
            EMAIL_CODE = #{ emailCode }
        WHERE EMP_EMAIL = #{ empEmail }
          AND EMP_ID = #{ empId }
    </update>

    <select id="selectEmailCode" resultMap="employeeResultMap" resultType="String">
        SELECT
            EMAIL_CODE
        FROM EMPLOYEE
        WHERE EMP_EMAIL = #{ empEmail }
          AND EMP_ID = #{ empId }
    </select>

    <update id="updatePwd" parameterType="EmployeeDTO">
        UPDATE
            EMPLOYEE
        SET
            EMP_PWD = #{ empPwd }
        WHERE EMAIL_CODE = #{ emailCode }
    </update>

    <select id="selectTotalCount" resultType="_int">
        SELECT
            COUNT(*)
        FROM EMPLOYEE
    </select>


</mapper>

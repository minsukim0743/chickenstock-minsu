<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chicken.project.item.model.dao.ItemMapper">
    <resultMap id="itemInfoResultMap" type="com.chicken.project.item.model.dto.ItemInfoDTO">
        <id property="itemNo" column="ITEM_NO"/>
        <result property="itemName" column="ITEM_NAME"/>
        <result property="itemStandard" column="ITEM_STANDARD"/>
        <result property="itemPurchase" column="ITEM_PURCHASE"/>
        <result property="itemSales" column="ITEM_SALES"/>
        <result property="itemSoldoutYn" column="ITEM_SOLDOUT_YN"/>
        <result property="itemMake" column="ITEM_MAKE"/>
        <result property="categoryNo" column="CATEGORY_NO"/>
        <result property="preCategory" column="PRE_CATEGORY"/>
        <result property="itemAmount" column="ITEM_AMOUNT"/>
        <result property="soldout" column="soldout"/>
        <result property="rNum" column="RNUM"/>
        <result property="itemDeleteYn" column="ITEM_DELETE_YN"/>
        <result property="categoryName" column="CATEGORY_NAME"/>
        <result property="itemDate" column="ITEM_DATE"/>
        <result property="fileName" column="FILE_NAME"/>
        <association property="itemFile" resultMap="itemFileResultMap"/>
        <association property="itemCategory" resultMap="itemCategoryResultMap"/>
    </resultMap>

    <resultMap id="itemCategoryResultMap" type="com.chicken.project.item.model.dto.ItemCategoryDTO">
        <id property="categoryNo" column="CATEGORY_NO"/>
        <result property="categoryName" column="CATEGORY_NAME"/>
        <result property="preCategory" column="PRE_CATEGORY"/>
    </resultMap>

    <resultMap id="itemFileResultMap" type="com.chicken.project.item.model.dto.ItemFileDTO">
        <id property="fileNo" column="FILE_NO"/>
        <result property="originName" column="ORIGIN_NAME"/>
        <result property="fileName" column="FILE_NAME"/>
        <result property="categoryNo" column="CATEGORY_NO"/>
        <result property="itemNo" column="ITEM_NO"/>
    </resultMap>

    <select id="selectTotalCount" resultType="_int" parameterType="hashmap">
        SELECT
               COUNT(*)
          FROM ITEM_INFO I
          JOIN ITEM_CATEGORY IC ON (I.CATEGORY_NO = IC.CATEGORY_NO)
          JOIN ITEM_FILE IF ON (I.ITEM_NO = IF.ITEM_NO)
        <where>
            <if test="searchCondition == 'itemName'">
                I.ITEM_NAME LIKE '%' || #{ searchValue } || '%'
            </if>
            <if test="searchCondition == 'category'">
                IC.CATEGORY_NAME LIKE '%' || #{ searchValue } || '%'
            </if>
            <if test="searchCondition == 'make'">
                I.ITEM_MAKE LIKE '%' || #{ searchValue } || '%'
            </if>
            AND I.ITEM_DELETE_YN = 'N'
        </where>
    </select>

    <select id="selectAllItem" resultMap="itemInfoResultMap">
        SELECT
               A.RNUM
             , A.ITEM_NO
             , A.ITEM_NAME
             , A.CATEGORY_NAME
             , A.ITEM_STANDARD
             , A.ITEM_PURCHASE
             , A.ITEM_SALES
             , A.ITEM_AMOUNT
             , A.ITEM_MAKE
             , A.FILE_NAME
             , A.ITEM_SOLDOUT_YN
             , A.soldout
         FROM (SELECT
                      ROWNUM RNUM
                    , B.ITEM_NO
                    , B.ITEM_NAME
                    , B.CATEGORY_NAME
                    , B.ITEM_STANDARD
                    , B.ITEM_PURCHASE
                    , B.ITEM_SALES
                    , B.ITEM_AMOUNT
                    , B.ITEM_MAKE
                    , B.FILE_NAME
                    , B.ITEM_SOLDOUT_YN
                    , B.soldout
                FROM (SELECT
                             I.ITEM_NO
                           , I.ITEM_NAME
                           , IC.CATEGORY_NAME
                           , I.ITEM_STANDARD
                           , I.ITEM_PURCHASE
                           , I.ITEM_SALES
                           , I.ITEM_AMOUNT
                           , I.ITEM_MAKE
                           , IF.FILE_NAME
                           , I.ITEM_SOLDOUT_YN
                           , CASE WHEN I.ITEM_AMOUNT = 0 THEN '품절'
                             ELSE '보유'
                             END soldout
                        FROM ITEM_INFO I
                        JOIN ITEM_CATEGORY IC ON (I.CATEGORY_NO = IC.CATEGORY_NO)
                        JOIN ITEM_FILE IF ON (I.ITEM_NO = IF.ITEM_NO)
                        <where>
                            <if test="searchCondition == 'itemName'">
                                I.ITEM_NAME LIKE '%' || #{ searchValue } || '%'
                            </if>
                            <if test="searchCondition == 'category'">
                                IC.CATEGORY_NAME LIKE '%' || #{ searchValue } || '%'
                            </if>
                            <if test="searchCondition == 'make'">
                                I.ITEM_MAKE LIKE '%' || #{ searchValue } || '%'
                            </if>
                            AND I.ITEM_DELETE_YN = 'N'
                        </where>
                       ORDER BY 1) B
            <![CDATA[
                    WHERE ROWNUM <= #{ endRow }
                    ]]>
            ) A
        WHERE A.RNUM >= #{ startRow }
        ORDER BY 1 ASC
    </select>

    <select id="selectPreCategory" resultMap="itemCategoryResultMap">
        SELECT
               IC.CATEGORY_NO
             , IC.CATEGORY_NAME
             , IC.PRE_CATEGORY
          FROM ITEM_CATEGORY IC
         WHERE IC.PRE_CATEGORY IS NULL
         ORDER BY 1
    </select>

    <select id="selectCategory" resultMap="itemCategoryResultMap">
        SELECT
            IC.CATEGORY_NO
             , IC.CATEGORY_NAME
             , IC.PRE_CATEGORY
        FROM ITEM_CATEGORY IC
        WHERE IC.PRE_CATEGORY IS NOT NULL
        ORDER BY 1
    </select>

    <insert id="insertItem">
        INSERT
          INTO ITEM_INFO
        (
            ITEM_NAME
          , ITEM_STANDARD
          , ITEM_PURCHASE
          , ITEM_SALES
          , ITEM_SOLDOUT_YN
          , ITEM_MAKE
          , CATEGORY_NO
          , ITEM_AMOUNT
        )
        VALUES
        (
            #{ itemName }
          , #{ itemStandard }
          , #{ itemPurchase }
          , #{ itemSales }
          , #{ itemSoldoutYn }
          , #{ itemMake }
          , #{ categoryNo }
          , #{ itemAmount }
        )
    </insert>

    <insert id="insertFileRegist">
        <selectKey keyProperty="itemNo" order="BEFORE" resultType="_int">
            SELECT
                  SEQ_ITEM_NO.CURRVAL
            FROM DUAL
        </selectKey>
        INSERT
          INTO ITEM_FILE
        (
          ORIGIN_NAME
        , FILE_NAME
        , ITEM_NO
        )
        VALUES
        (
          #{ originName }
        , #{ fileName }
        , #{ itemNo }
        )
    </insert>

    <insert id="insertItemHistory">
        INSERT
          INTO ITEM_HISTORY
        (
          ITEM_NO
        )
        VALUES
        (
          SEQ_ITEM_NO.CURRVAL
        )
    </insert>

    <delete id="deleteItem">
        UPDATE ITEM_INFO
           SET ITEM_DELETE_YN = 'Y'
         WHERE ITEM_NO = #{ itemNo }
    </delete>

    <delete id="deleteItemFile">
        DELETE
          FROM ITEM_FILE
         WHERE ITEM_NO = #{ itemNo }
    </delete>

    <select id="selectOneItem" resultMap="itemInfoResultMap">
        SELECT
               I.ITEM_NO
             , I.ITEM_NAME
             , I.ITEM_STANDARD
             , I.ITEM_PURCHASE
             , I.ITEM_SALES
             , I.ITEM_SOLDOUT_YN
             , I.ITEM_MAKE
             , IC.CATEGORY_NO
             , IC.CATEGORY_NAME
             , IC.PRE_CATEGORY
             , I.ITEM_AMOUNT
             , I.ITEM_DATE
             , IF.FILE_NAME
             , CASE WHEN I.ITEM_AMOUNT = 0 THEN '품절'
                    ELSE '보유'
                     END soldout
          FROM ITEM_INFO I
          JOIN ITEM_CATEGORY IC ON (I.CATEGORY_NO = IC.CATEGORY_NO)
          JOIN ITEM_FILE IF ON (I.ITEM_NO = IF.ITEM_NO)
         WHERE I.ITEM_NO = #{ itemNo }
    </select>

    <select id="selectMainItem" resultMap="itemInfoResultMap">
        SELECT
                B.ITEM_NO
              , B.ITEM_NAME
              , B.CATEGORY_NAME
              , B.ITEM_STANDARD
              , B.ITEM_PURCHASE
              , B.ITEM_AMOUNT
              , B.ITEM_MAKE
              , B.FILE_NAME
              , B.ITEM_SOLDOUT_YN
              , B.soldout
          FROM (SELECT
                        I.ITEM_NO
                      , I.ITEM_NAME
                      , IC.CATEGORY_NAME
                      , I.ITEM_STANDARD
                      , I.ITEM_PURCHASE
                      , I.ITEM_SALES
                      , I.ITEM_AMOUNT
                      , I.ITEM_MAKE
                      , IF.FILE_NAME
                      , I.ITEM_SOLDOUT_YN
                      , CASE WHEN I.ITEM_AMOUNT = 0 THEN '품절'
                             ELSE '보유'
                              END soldout
                   FROM ITEM_INFO I
                   JOIN ITEM_CATEGORY IC ON (I.CATEGORY_NO = IC.CATEGORY_NO)
                   JOIN ITEM_FILE IF ON (I.ITEM_NO = IF.ITEM_NO)
                  WHERE I.ITEM_DELETE_YN = 'N'
                ORDER BY 1 DESC ) B
    <![CDATA[
                WHERE ROWNUM <= 3
                ]]>
    </select>

    <update id="updateItem">
        UPDATE ITEM_INFO
        SET ITEM_NAME = #{ itemName }
          , ITEM_STANDARD = #{ itemStandard }
          , ITEM_PURCHASE = #{ itemPurchase }
          , ITEM_SALES = #{ itemSales }
          , ITEM_SOLDOUT_YN = #{ itemSoldoutYn }
          , ITEM_MAKE = #{ itemMake }
          , CATEGORY_NO = #{ categoryNo }
          , ITEM_AMOUNT = #{ itemAmount }
        WHERE ITEM_NO = #{ itemNo }
    </update>

    <delete id="deleteItemFile2">
        DELETE
        FROM ITEM_FILE
        WHERE ITEM_NO = #{ itemNo }
    </delete>

    <insert id="insertItemFile">
        INSERT
        INTO ITEM_FILE
        (
          ORIGIN_NAME
        , FILE_NAME
        , ITEM_NO
        )
        VALUES
        (
          #{ originName }
        , #{ fileName }
        , #{ itemNo }
        )
    </insert>
</mapper>
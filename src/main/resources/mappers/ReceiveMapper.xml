<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chicken.project.receive.model.dao.ReceiveMapper">
    <resultMap id="receiveOfficeResultMap" type="com.chicken.project.receive.model.dto.ReceiveOfficeDTO">
        <id property="recCode" column="REC_CODE"/>
        <result property="recDate" column="REC_DATE"/>
        <result property="empId" column="EMP_ID"/>
        <result property="sumRecTotalAmount" column="sumRecTotalAmount"/>
        <result property="countRecCode" column="countRecCode"/>
        <result property="sumRecTotalMoney" column="sumRecTotalMoney"/>
        <result property="stringRecDate" column="stringRecDate"/>
        <result property="maxRecCode" column="maxRecCode"/>
        <result property="rNum" column="RNUM"/>
        <association property="receiveOfficeItem" resultMap="receiveOfficeItemResultMap"/>
        <association property="itemInfo" resultMap="itemInfoResultMap"/>
        <association property="itemCategory" resultMap="itemCategoryResultMap"/>
        <association property="itemFile" resultMap="itemFileResultMap"/>
        <association property="employee" resultMap="employeeResultMap"/>
    </resultMap>


    <resultMap id="receiveOfficeItemResultMap" type="com.chicken.project.receive.model.dto.ReceiveOfficeItemDTO">
        <id property="recItemNo" column="REC_ITEM_NO"/>
        <result property="recCode" column="REC_CODE"/>
        <result property="itemNo" column="ITEM_NO"/>
        <result property="itemName" column="ITEM_NAME"/>
        <result property="categoryName" column="CATEGORY_NAME"/>
        <result property="itemStandard" column="ITEM_STANDARD"/>
        <result property="itemMake" column="ITEM_MAKE"/>
        <result property="recAmount" column="REC_AMOUNT"/>
        <result property="stringRecAmount" column="stringRecAmount"/>
        <result property="itemPurchase" column="itemPurchase"/>
        <result property="recMoney" column="recMoney"/>
        <result property="stringRecDate" column="stringRecDate"/>
        <result property="fileName" column="FILE_NAME"/>
    </resultMap>

    <resultMap id="itemInfoResultMap" type="com.chicken.project.item.model.dto.ItemInfoDTO">
        <id property="itemNo" column="ITEM_NO"/>
        <result property="itemName" column="ITEM_NAME"/>
        <result property="itemStandard" column="ITEM_STANDARD"/>
        <result property="itemPurchase" column="ITEM_PURCHASE"/>
        <result property="itemSales" column="ITEM_SALES"/>
        <result property="itemSoldoutYn" column="ITEM_SOLDOUT_YN"/>
        <result property="itemMake" column="ITEM_MAKE"/>
        <result property="categoryNo" column="CATEGORY_NO"/>
        <result property="itemAmount" column="ITEM_AMOUNT"/>
        <result property="soldout" column="soldout"/>
        <result property="categoryName" column="CATEGORY_NAME"/>
        <result property="itemDeleteYn" column="ITEM_DELETE_YN"/>
        <association property="itemFile" resultMap="itemFileResultMap"/>
    </resultMap>

    <resultMap id="itemCategoryResultMap" type="com.chicken.project.item.model.dto.ItemCategoryDTO">
        <id property="categoryNo" column="CATEGORY_NO"/>
        <result property="categoryName" column="CATEGORY_NAME"/>
        <result property="preCategory" column="PRE_CATEGORY"/>
    </resultMap>

    <resultMap id="itemFileResultMap" type="com.chicken.project.item.model.dto.ItemFileDTO">
        <id property="fileNo" column="FILE_NO"/>
        <result property="originName" column="ORIGIN_NAME"/>
        <result property="fileName" column="FILE_NAME"/>
        <result property="categoryNo" column="CATEGORY_NO"/>
        <result property="itemNo" column="ITEM_NO"/>
    </resultMap>

    <resultMap id="employeeResultMap" type="com.chicken.project.receive.model.dto.RecEmployeeDTO">
        <id property="empId" column="EMP_ID"/>
        <result property="empName" column="EMP_NAME"/>
    </resultMap>

    <select id="selectTotalCount" resultType="_int" parameterType="hashmap">
        SELECT
               COUNT(COUNT(RO.REC_CODE))
          FROM RECEIVE_OFFICE RO
          JOIN RECEIVE_OFFICE_ITEM RI ON(RI.REC_CODE = RO.REC_CODE)
          JOIN ITEM_INFO I ON (RI.ITEM_NO = I.ITEM_NO)
        <where>
            <if test="searchCondition == 'itemName'">
                I.ITEM_NAME LIKE '%' || #{ searchValue } || '%'
            </if>
            <if test="startDate != null and !startDate.equals('')">
                AND TO_CHAR(RO.REC_DATE, 'YYYY-MM-DD') BETWEEN #{ startDate } AND #{ endDate }
            </if>
        </where>
        GROUP BY RO.REC_CODE
    </select>

    <select id="selectAllReceive" resultMap="receiveOfficeResultMap">
SELECT
       A.RNUM
     , A.REC_CODE
     , A.sumRecTotalAmount
     , A.countRecCode
     , A.sumRecTotalMoney
     , A.StringRecDate
     , A.EMP_NAME
  FROM (SELECT
               ROWNUM RNUM
             , B.REC_CODE
             , B.sumRecTotalAmount
             , B.countRecCode
             , B.sumRecTotalMoney
             , B.StringRecDate
             , B.EMP_NAME
          FROM (SELECT
                       RO.REC_CODE
                     , SUM(RI.REC_AMOUNT) sumRecTotalAmount
                     , TO_CHAR(COUNT(RO.REC_CODE)-1) countRecCode
                     , CONCAT(TO_CHAR(SUM(RI.REC_AMOUNT * I.ITEM_PURCHASE), '999,999,999,999,999'), '원') sumRecTotalMoney
                     , TO_CHAR(RO.REC_DATE, 'YYYY-MM-DD') StringRecDate
                     , RO.EMP_NAME
                  FROM RECEIVE_OFFICE RO
                  JOIN RECEIVE_OFFICE_ITEM RI ON(RO.REC_CODE = RI.REC_CODE)
                  JOIN ITEM_INFO I ON (RI.ITEM_NO = I.ITEM_NO)
                  <where>
                      <if test="searchCondition == 'itemName'">
                          RO.REC_CODE IN (SELECT DISTINCT(RI.REC_CODE) FROM RECEIVE_OFFICE_ITEM RI JOIN ITEM_INFO I ON(I.ITEM_NO = RI.ITEM_NO) WHERE I.ITEM_NAME LIKE '%' || #{ searchValue } || '%')
                      </if>
                      <if test="startDate != null and !startDate.equals('')">
                          AND TO_CHAR(RO.REC_DATE, 'YYYY-MM-DD') BETWEEN #{ startDate } AND #{ endDate }
                      </if>
                  </where>
                 GROUP BY RO.REC_CODE
                        , RO.REC_DATE
                        , RO.EMP_NAME
                 ORDER BY 1) B
        <![CDATA[
                WHERE ROWNUM <= #{ endRow }
                ]]>
        ) A
WHERE A.RNUM >= #{ startRow }
ORDER BY 1 ASC
    </select>

    <select id="selectAllReceiveItem" resultMap="receiveOfficeItemResultMap">
    SELECT
          RO.REC_CODE
        , RI.ITEM_NO
        , I.ITEM_NAME
        , IC.CATEGORY_NAME
        , I.ITEM_STANDARD
        , I.ITEM_MAKE
        , IF.FILE_NAME
        , TO_CHAR(RI.REC_AMOUNT, '999,999,999') stringRecAmount
        , CONCAT(TO_CHAR(I.ITEM_PURCHASE, '999,999,999'), '원') itemPurchase
        , CONCAT(TO_CHAR(RI.REC_AMOUNT * I.ITEM_PURCHASE, '999,999,999,999,999,999'), '원') recMoney
        , TO_CHAR(RO.REC_DATE, 'YYYY-MM-DD') stringRecDate
     FROM RECEIVE_OFFICE RO
     JOIN RECEIVE_OFFICE_ITEM RI ON(RO.REC_CODE = RI.REC_CODE)
     JOIN ITEM_INFO I ON (RI.ITEM_NO = I.ITEM_NO)
     JOIN ITEM_CATEGORY IC ON (I.CATEGORY_NO = IC.CATEGORY_NO)
     JOIN ITEM_FILE IF ON (I.ITEM_NO = IF.ITEM_NO)
    WHERE RO.REC_CODE = #{ recCode }
    ORDER BY 1, 2
    </select>

    <select id="selectAllItem" resultMap="itemInfoResultMap">
        SELECT
               I.ITEM_NO
             , I.ITEM_NAME
             , IC.CATEGORY_NAME
             , I.ITEM_STANDARD
             , I.ITEM_PURCHASE
             , I.ITEM_SALES
             , I.ITEM_AMOUNT
             , I.ITEM_MAKE
             , IF.FILE_NAME
             , I.ITEM_SOLDOUT_YN
             , CASE WHEN I.ITEM_AMOUNT = 0 THEN '품절'
               ELSE '보유'
               END soldout
        FROM ITEM_INFO I
        JOIN ITEM_CATEGORY IC ON (I.CATEGORY_NO = IC.CATEGORY_NO)
        JOIN ITEM_FILE IF ON (I.ITEM_NO = IF.ITEM_NO)
        <where>
            <if test="searchCondition == 'itemName'">
                I.ITEM_NAME = #{ searchValue }
            </if>
            <if test="searchCondition == 'category'">
                IC.CATEGORY_NAME = #{ searchValue }
            </if>
            <if test="searchCondition == 'make'">
                I.ITEM_MAKE = #{ searchValue }
            </if>
        </where>
      ORDER BY 1
    </select>

    <select id="selectItemTotalCount" resultType="_int" parameterType="hashmap">
        SELECT
               COUNT(*)
          FROM ITEM_INFO I
          JOIN ITEM_CATEGORY IC ON(I.CATEGORY_NO = IC.CATEGORY_NO)
    </select>

    <select id="selectRegistReceive" parameterType="hashMap" resultMap="itemInfoResultMap">
        SELECT
               IF.FILE_NAME
             , I.ITEM_NAME
             , I.ITEM_NO
             , I.ITEM_STANDARD
             , I.ITEM_AMOUNT
             , I.ITEM_PURCHASE
          FROM ITEM_INFO I
          JOIN ITEM_FILE IF ON(IF.ITEM_NO = I.ITEM_NO)
         WHERE I.ITEM_NO IN 
         <foreach collection="itemNoList" item="itemNo" open="(" separator=", " close=")">
             #{ itemNo }
         </foreach>
    </select>

    <insert id="insertReceiveOffice">
        INSERT
          INTO RECEIVE_OFFICE
        (
         REC_CODE,
         EMP_NAME
        )
        VALUES
        (
         (TO_CHAR('SI' || LPAD(SEQ_REC_CODE.NEXTVAL, 4, '0'))),
         #{ empName }
         )
    </insert>

    <insert id="insertReceiveOfficeItem" parameterType="hashMap">
        INSERT
          INTO RECEIVE_OFFICE_ITEM
        (
          ITEM_NO,
          REC_CODE,
          REC_AMOUNT
        )
        VALUES
        (
          #{ itemNo },
          (TO_CHAR('SI' || LPAD(SEQ_REC_CODE.CURRVAL, 4, '0'))),
          #{ amount }
        )
    </insert>

    <insert id="insertItemHistory" parameterType="hashMap">
        INSERT
        INTO ITEM_HISTORY
        (
            REC_CODE,
            ITEM_NO
        )
        VALUES
            (
                (TO_CHAR('SI' || LPAD(SEQ_REC_CODE.CURRVAL, 4, '0'))),
                #{ itemNo }
            )
    </insert>

    <select id="selectMaxCode" resultMap="receiveOfficeResultMap">
        SELECT MAX(REC_CODE) maxRecCode
          FROM RECEIVE_OFFICE
    </select>

    <update id="updateItem">
        UPDATE ITEM_INFO I
           SET I.ITEM_AMOUNT = (SELECT RI.REC_AMOUNT
                                  FROM RECEIVE_OFFICE_ITEM RI
                                 WHERE RI.ITEM_NO = #{ itemNo }
                                   AND RI.REC_CODE = #{ recCode })
                                + I.ITEM_AMOUNT
        WHERE I.ITEM_NO = #{ itemNo }
    </update>
</mapper>